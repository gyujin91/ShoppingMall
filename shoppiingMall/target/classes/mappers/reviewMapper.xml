<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<!-- mapper - mybatis, sqlMap - ibatis -->
<mapper namespace="review">
	
	<!-- 리뷰 목록 조회 -->
	<select id="reviewList" resultType="com.shopping.dto.ReviewDTO">
	    SELECT 
		    R.RNO,
		    R.REVIEW_TITLE,
		    R.REVIEW_CONTENT,
		    R.MEM_ID,
		    M.MEM_NAME,
		    R.PROD_NO,
		    P.PROD_NAME,
		    P.PROD_IMAGE,
		    R.REVIEW_REGDATE,
		    R.REPLY,
		    R.REPLY_ID,
		    R.REPLY_NAME,
		    R.REPLY_REGDATE AS REPLY_DATE
		FROM 
		    REVIEW R
		JOIN 
		    PRODUCT P ON R.PROD_NO = P.PROD_NO
		JOIN 
		    MEMBER M ON R.MEM_ID = M.MEM_ID
		WHERE 
		    R.USEYN = 'Y'
	</select>

	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="com.shopping.dto.ReviewDTO">
	    INSERT INTO REVIEW
		    (REVIEW_TITLE,
		     REVIEW_CONTENT,
		     MEM_ID,
		     MEM_NAME,
		     PROD_NO,
		     PROD_NAME,
		     PROD_IMAGE,
		     REVIEW_REGDATE,
		     REVIEW_DELDATE,
		     REPLY,
		     REPLY_ID,
		     USEYN,
		     REPLY_REGDATE,
		     REPLY_UPDATE)
		VALUES (
		    #{review_title},
		    #{review_content},
		    #{mem_id},
		    #{mem_name},
		    #{prod_no},
		    #{prod_name},
		    #{prod_image},
		   	 DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
		    NULL,
		    NULL,
		    NULL,
		    'Y',
		    DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
		    NULL)
	</insert>
	
	<select id="getReviewByRno">
		SELECT 
		    RNO,
		    REVIEW_TITLE,
		    REVIEW_CONTENT,
		    MEM_ID,
		    MEM_NAME,
		    PROD_NO,
		    PROD_NAME,
		    PROD_IMAGE,
		    REVIEW_REGDATE,
		    REPLY,
		    REPLY_ID,
		    REPLY_NAME,
		    REPLY_REGDATE
		FROM 
		    REVIEW
		WHERE 
		    RNO = #{rno}	
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview">
		
	</update>
	
	<!-- 리뷰 삭제 -->
	<update id="deleteReview">
		UPDATE REVIEW SET
			USEYN = 'N',
			REVIEW_DELDATE = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE RNO = #{rno}
	</update>

	
	
</mapper> 